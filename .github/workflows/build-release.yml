name: Build Release

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: |
          cd app
          cargo build --release
          echo "Contents of target/release/:"
          ls -l target/release/

      - name: Determine next release number
        id: release_number
        run: |
          # Count existing releases and add 1
          COUNT=$(gh release list --limit 100 | wc -l | tr -d ' ')
          NEW_RELEASE_NUMBER=$((COUNT + 1))
          echo "release_number=$NEW_RELEASE_NUMBER" >> "$GITHUB_OUTPUT"
          echo "Next release number: $NEW_RELEASE_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.release_number.outputs.release_number }}
          name: "Release v${{ steps.release_number.outputs.release_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.release_number.outputs.release_number }}
          files: app/target/release/rss-generator
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
